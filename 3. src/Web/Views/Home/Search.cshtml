@using System.Activities.Statements
@using Dokmee.Dms.Advanced.WebAccess.Data
@model Web.ViewModels.Home.SearchModel
@{
    ViewBag.Title = "Search";
}

@Html.Partial("_loadingOverlay")
<input type="hidden" id="cabinet-id" value="@Model.CabinetId" />
<section>
    <div class="col-md-12">
        <div class="my-box box-header-boder">
            <div class="box-header">
                <h3>Search</h3>

                <form action="Search" method="post" id="search-form">
                    @Html.HiddenFor(model => model.CabinetId)

                    <!-- Start Select Index -->
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-3">
                                <label class="pull-right">Index</label>
                            </div>
                            <div class="col-md-3">
                                <select class="form-control" id="search-select-index">
                                    @foreach (var index in Model.TableTitles)
                                    {
                                        <option value="@index.Id" @(index == Model.TableTitles.First() ? "selected" : "")>
                                            @index.Title
                                        </option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-3">
                                @foreach (var index in Model.TableTitles)
                                {
                                    int i = Model.TableTitles.IndexOf(index);
                                    <input type="hidden" value="@index.Id" />
                                    <input type="hidden" value="@index.Title" />
                                    <input type="hidden" value="@index.Order" />
                                    <input type="hidden" value="@index.Type" />

                                    if (string.Equals(index.Title.ToUpper(), "DOCUMENT STATUS"))
                                    {
                                        string value = index.ValueString;
                                        <select class="form-control index-select-input" style="margin: auto;"
                                                id="search-index-@index.Id">
                                            <option @(value.ToUpper().Equals("NEW") ? "selected" : "") value="New">
                                                New
                                            </option>
                                            <option @(value.ToUpper().Equals("UPDATED") ? "selected" : "") value="Updated">
                                                Updated
                                            </option>
                                            <option @(value.ToUpper().Equals("COMPLETE") ? "selected" : "") value="Complete">
                                                Complete
                                            </option>
                                        </select>
                                    }
                                    else
                                    {
                                        switch (index.Type)
                                        {
                                            case IndexValueType.Integer:
                                            case IndexValueType.Float:
                                                <input type="number" class="form-control index-select-input" style="display: none;"
                                                       id="search-index-@index.Id" placeholder="@index.Title" />
                                                break;

                                            case IndexValueType.DateTime:
                                                <input type="date" class="form-control index-select-input" style="display: none;"
                                                       id="search-index-@index.Id" placeholder="@index.Title" />
                                                break;

                                            case IndexValueType.String:
                                                <input type="text" class="form-control index-select-input" style="display: none;"
                                                       id="search-index-@index.Id" placeholder="@index.Title" />
                                                break;
                                        }
                                    }
                                }
                            </div>
                            <div class="col-md-1">
                                <button class="btn btn-default pull-left" onclick="onAddSearchConditionClick()" type="button">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                            <div class="col-md-2">
                                <button class="btn btn-primary">
                                    <i class="fa fa-search"></i> Search
                                </button>
                            </div>
                            <br />
                        </div>
                    </div>
                    <!-- End Select Index -->

                    @foreach (var index in Model.TableTitles)
                    {
                        int i = Model.TableTitles.IndexOf(index);
                        <div class="row" id="row-search-input-group-@index.Id" style='@(string.IsNullOrWhiteSpace(index.ValueString) ? "display: none;" : "")'>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <!--Nothing-->
                                </div>
                                <div class="col-md-3">
                                    <label class="pull-right col-form-label">@index.Title</label>
                                </div>
                                <div class="col-md-3">
                                    <input type="hidden" name="TableTitles[@i].Id" value="@index.Id" />
                                    <input type="hidden" name="TableTitles[@i].Title" value="@index.Title" />
                                    <input type="hidden" name="TableTitles[@i].Order" value="@index.Order" />
                                    <input type="hidden" name="TableTitles[@i].Type" value="@index.Type" />

                                    @if (string.Equals(index.Title.ToUpper(), "DOCUMENT STATUS"))
                                    {
                                        string value = index.ValueString;
                                        <select class="form-control" style="margin: auto;"
                                                name="TableTitles[@i].Value" id="search-input-index-@index.Id"
                                                value="@value">
                                            @if (string.IsNullOrWhiteSpace(value))
                                            {
                                                <option selected value=""></option>
                                            }

                                            <option @(value.ToUpper().Equals("NEW") ? "selected" : "") value="New">
                                                New
                                            </option>
                                            <option @(value.ToUpper().Equals("UPDATED") ? "selected" : "") value="Updated">
                                                Updated
                                            </option>
                                            <option @(value.ToUpper().Equals("COMPLETE") ? "selected" : "") value="Complete">
                                                Complete
                                            </option>
                                        </select>
                                    }
                                    else
                                    {
                                        switch (index.Type)
                                        {
                                            case IndexValueType.Integer:
                                            case IndexValueType.Float:
                                                <input type="number" class="form-control"
                                                       value="@index.ValueString" id="search-input-index-@index.Id" placeholder="@index.Title"
                                                       name="TableTitles[@i].Value" />
                                                break;

                                            case IndexValueType.DateTime:
                                                <input type="date" class="form-control"
                                                       value="@index.ValueString" id="search-input-index-@index.Id" placeholder="@index.Title"
                                                       name="TableTitles[@i].Value" />
                                                break;

                                            case IndexValueType.String:
                                                <input type="text" class="form-control"
                                                       value="@index.ValueString" id="search-input-index-@index.Id" placeholder="@index.Title"
                                                       name="TableTitles[@i].Value" />
                                                break;
                                        }
                                    }
                                </div>
                                <div class="col-md-1">
                                    <button class="btn btn-default pull-left" onclick="onRemoveSearchInput('@index.Id')" type="button" title="Remove this condition">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </div>
                                <div class="col-md-2">

                                </div>
                                <br />
                            </div>
                        </div>
                    }


                </form>

            </div>
            <hr />


            <div class="row">
                <div class="col-md-6">
                </div>
                <div class="col-md-6">
                    <button class="btn btn-primary pull-right" type="button" onclick="UpdateStatusSearchIndex()">Update</button>
                </div>
            </div>
            <hr />
        <div class="box-body">
            <div class="document-table-wrapper">
                <table class="table document-table" id="tblfileSystems">
                    <thead>
                        <tr>
                            <th style="width: 100%;">
                                <input type="checkbox" name="all" id="checkbox-all">
                            </th>
                            <th style="width: 100%;">EXT</th>

                            @foreach (var head in Model.TableTitles)
                            {
                                <th style="width: 100%;">@head.Title</th>
                            }
                        </tr>
                    </thead>

                    <tbody>
                        @if (Model.DocumentItems.Any())
                        {
                            foreach (var doc in Model.DocumentItems)
                            {
                                <tr nodeId="@doc.Id">
                                    <td>
                                        <div class="icheckbox">
                                            <input type="checkbox" id="checkbox" class="select-doc-item">
                                        </div>
                                    </td>
                                    <td onclick="preview('@Model.CabinetId', '@doc.Id')">
                                        @Html.Partial("_itemIcon", doc.Type)
                                    </td>

                                    @if (doc.Indexs.Any())
                                    {
                                        foreach (var index in doc.Indexs)
                                        {
                                            if (index.Title.ToUpper() == "DOCUMENT STATUS")
                                            {
                                                if (string.IsNullOrEmpty(index.ValueString))
                                                {
                                                    index.ValueString = "New";
                                                }
                                                string value = index.ValueString;
                                                <td>
                                                    <select class="form-control" style="margin: auto;"
                                                            id="status" value="@value">
                                                        <option @(value.ToUpper().Equals("NEW") ? "selected" : "") value="New">
                                                            New
                                                        </option>
                                                        <option @(value.ToUpper().Equals("UPDATED") ? "selected" : "") value="Updated">
                                                            Updated
                                                        </option>
                                                        <option @(value.ToUpper().Equals("COMPLETE") ? "selected" : "") value="Complete">
                                                            Complete
                                                        </option>
                                                    </select>
                                                </td>

                                            }
                                            else
                                            {
                                                <td>@index.Value</td>
                                            }

                                        }
                                    }

                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="@(2 + Model.TableTitles.Count)">
                                    <strong>No document found!</strong>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>


            </div>
        </div>
            <div class="box-footer">

            </div>
        </div>
    </div>
</section>

@section styles{

}
@section scripts
{
    <script src="~/Scripts/home/search.js"></script>
}


