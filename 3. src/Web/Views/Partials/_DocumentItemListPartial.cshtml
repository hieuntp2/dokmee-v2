@using Web.ViewModels.Elements
@model Web.ViewModels.Elements.DocumentItemListModel
@{
}

<!--
IMPORTANCE: Required this JS file:
<script src="~/Scripts/home/_document-item-list.js"></script>
-->

<div class="row">
    <div class="col-md-6">
        <strong>@Model.DocumentItems.Count() items</strong>
    </div>
    <div class="col-md-6">
        <button class="btn btn-default pull-right" type="button" onclick="complete()">
            <i class="fa fa-check"></i> Complete
        </button>
        <button class="btn btn-primary pull-right" type="button" onclick="UpdateStatusSearchIndex()">
            <i class="fa fa-save"></i> Update
        </button>
    </div>
</div>
<hr />

<div class="document-table-wrapper">
    <table class="table document-table" id="tblfileSystems">
        <thead>
            <tr>
                <th>
                    <input type="checkbox" name="all" id="checkbox-all">
                </th>
                <th>EXT</th>

                @foreach (var head in Model.TableTitles)
                {
                    <th style="width: 100%;">@head.Title</th>
                }
            </tr>
        </thead>

        <tbody>
            @if (Model.DocumentItems.Any())
            {
                foreach (var doc in Model.DocumentItems)
                {
                    <tr nodeId="@doc.Id">
                        <td>
                            <div class="icheckbox">
                                <input type="checkbox" id="checkbox" class="select-doc-item">
                            </div>
                        </td>
                        <td class="doc-item-type-td" onclick="preview('@doc.Id')"  title="Click to view">
                            @Html.Partial("/Views/Home/_itemIcon.cshtml", doc.Type)
                        </td>

                        @if (doc.Indexs.Any())
                        {
                            foreach (var index in doc.Indexs)
                            {
                                if (index.Title.ToUpper() == "DOCUMENT STATUS")
                                {
                                    if (string.IsNullOrEmpty(index.ValueString))
                                    {
                                        index.ValueString = "New";
                                    }
                                    string value = index.ValueString;
                                    <td>
                                        @{
                                            DocumentStatusSelectModel docStatusModel = new DocumentStatusSelectModel()
                                            {
                                                ElementId = "status",
                                                SelectedValue = index.ValueString,

                                            };

                                            @Html.Partial("/Views/Partials/_DocumetStatusSelection.cshtml", docStatusModel)
                                        }
                                    </td>

                                }
                                else
                                {
                                    <td>@index.Value</td>
                                }

                            }
                        }

                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="@(2 + Model.TableTitles.Count())">
                        <strong>No document found!</strong>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>