@using Services
@using Web.Models
@using Web.ViewModels.Elements
@model Web.ViewModels.Elements.DocumentItemListModel
@{

}
<!--
IMPORTANCE: Required this JS file:
<script src="~/Scripts/home/_document-item-list.js"></script>
-->

@Html.Hidden("updatestatus", Url.Action("UpdateStatus", "Home"))
@Html.Hidden("complete", Url.Action("Complete", "Home"))
@Html.Hidden("preview", Url.Action("Preview", "Home"))
<div class="row">
    <div class="col-sm-2">

        @if (Model.HaveDocumentStatusTitle)
        {
            <button class="btn btn-primary" type="button" onclick="UpdateStatusSearchIndex()">
                <i class="fa fa-save"></i> Update
            </button>
        }

    </div>
    <div class="col-sm-4">
        @if (Model.HaveDocumentStatusTitle)
        {
            <div class="input-group">
                <span class="input-group-btn">
                    <button class="btn btn-default" onclick="updateAllStatus()"><i class="fa fa-save"></i> Update status</button>
                </span>
                @{
                    DocumentStatusSelectModel modelSelectAll = new DocumentStatusSelectModel()
                    {
                        ElementId = "update-all-status-value",
                    };

                    @Html.Partial("~/Views/Partials/_DocumetStatusSelection.cshtml", modelSelectAll)
                }
            </div><!-- /input-group -->
        }
    </div>
    <div class="col-sm-6">
        <button class="btn btn-default pull-right" type="button" onclick="complete()">
            <i class="fa fa-check"></i> Complete
        </button>
    </div>
</div>
<hr />
<div class="document-table-wrapper">
    <table class="table document-table table-hover" id="tblfileSystems">
        <thead>
            <tr>
                <th style="text-align: center;">
                    <input type="checkbox" name="all" id="checkbox-all">
                </th>
                <th>EXT</th>
                @foreach (var head in Model.TableTitles)
                {
                    <th style="width: 100%;">@head.Title.ToUpper()</th>
                }
            </tr>
        </thead>
        <tbody>
            @if (Model.DocumentItems.Any())
            {
                foreach (var doc in Model.DocumentItems)
                {
                    <tr nodeId="@doc.Id">
                        <td style="text-align: center;">
                            <div class="icheckbox">
                                <input type="checkbox" id="checkbox" class="select-doc-item">
                            </div>
                        </td>
                        <td class="doc-item-type-td" onclick="preview('@doc.Id')" title="Click to view">
                            @Html.Partial("~/Views/Home/_itemIcon.cshtml", doc.Type)
                        </td>
                        @if (doc.Indexs.Any())
                        {
                            foreach (var index in doc.Indexs)
                            {
                                if (index.Title.ToUpper() == StaticStringName.DOCUMENT_STATUS.ToUpper())
                                {
                                    if (string.IsNullOrEmpty(index.ValueString))
                                    {
                                        index.ValueString = EDocumentStatus.New.ToString();
                                    }
                                    string value = index.ValueString;
                                    <td>
                                        @{
                                            DocumentStatusSelectModel docStatusModel = new DocumentStatusSelectModel()
                                            {
                                                ElementId = "status",
                                                SelectedValue = index.ValueString,

                                            };

                                            @Html.Partial("~/Views/Partials/_DocumetStatusSelection.cshtml", docStatusModel)
                                        }
                                    </td>

                                }
                                else
                                {
                                    <td>@index.Value</td>
                                }

                            }
                        }
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="@(2 + Model.TableTitles.Count())">

                        @if (Model.HaveSearchValue)
                        {
                            <strong>No document found!</strong>
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
    <small>@Model.DocumentItems.Count() items</small>
</div>